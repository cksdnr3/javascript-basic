//                                                  new Function  문법
// 함수를 표현할 땐 함수 표현식과 함수 선언문 이외에 함수를 만들 수도 있는 문법이 하나 더 있다. (잘 사용하지 않음)

let func = new Function([arg1, arg2, ...argN], functionBody);
//  Function()은 2개의 인수로 이루어져 있는데 매개변수로 사용할 인수[arg1 ...argN]와 함수 본문으로 사용할 functionBody가 있다.

let sum = new Function('a', 'b', 'return a + b');
alert( sum(1, 2) ); // 3

let sayHi = new Function('alert("Hello")'); // 매개 변수없이 본문만 있는 함수
sayHi(); // Hello 

// 기존 함수 표현방식과 new Function의 가장 큰 차이점은 런타임에 받은 문자열을 사용해 함수를 만들 수 있다는 점이다.
// 함수 표현식과 함수 선언문은 개바자가 직접 스크립트를 작성해야만 함수를 만들 수 있지만, new Function은 어떤 문자열도 함수로 바꿀 수 있다.
// 예를 들어 서버에서 전달받은 문자열을 이용해 새로운 함수를 만들고 이를 실행하는 것 등등...
let str = "서버에서 동적으로 받은 문자열이라고 가정 (코드 형태)"
let func = new Function(str);
func();
// 서버에서 코드를 받거나 템플릿을 사용해 함수를 동적으로 컴파일해야 하는 경우, 복잡한 웹 애플리케이션을 구현할 때와 같이 특별한 경우에 new Function을 사용

//-------------------------------------------------------------------------------------------------------------------------------------------------
//                                                  클로저
// 함수는 특별한 프로퍼티 [[Envrionment]]에 저장된 정보를 이용해 자기 자신이 태어난 곳을 기억한다. 함수가 만들어진 렉시컬 환경을 참조한다.
// 하지만 new Function을 이용해 만든 함수의 [[Environment]] 프로퍼티는 현재 렉시컬 환경이 아닌 전역 렉시컬 환경을 바로 참조한다.
// 따라서 외부 변수에 접근할 수 없고 오직 전역 변수에만 접근 가능
function getFunc() {
    let value = "test";
    let func = new Function('alert(value'); // 지역 변수 value에 접근할 수 없음

    return func;
}
getFunc()(); // ReferenceError: value is not defined

// new Function으로 만든 새로운 함수 내부에서 외부 변수에 접근하려 할 때, 기존 함수 선언 방식으로 작성한 함수와 동일한 동작이 보장되어야 한다.
// 하지만 스크립트가 프로덕션 서버에 반영되기 전, 압축기(minifier)에 의해 압축될 때 문제가 발생한다.
// 압축기는 스크립트 주석이나 여분의 공백 등을 없애 코드 크기를 줄여주는 특수한 프로그램인데 압축기가 지역 변수 이름을 짧게 바꾸면서 문제가 발생한다.
// 예를 들어
// 함수 내부에 let userName라는 변수가 있으면 이 지역변수는 압축기에 의해 let a 같은 짧은 이름으로 대체되는데, 이때 userName 모두가 a로 교체된다.
// userName은 지역변수고 함수 외부에선 내부에 접근할 수 없기 때문에 이렇게 해도 전혀 문제가 없다.
// 이런 동작 방식 때문에 new Function 문법으로 만든 함수 내부에서 외부 변수에 접근하려고 하면 userName은 이미 이름이 변경되었기 때문에 찾을 수 없다.
// 압축기가 동작한 이후엔 new Function으로 만든 함수 내부에서 외부 렉시컬 환경에 접근하려고 하면 변수를 찾을 수 없는 문제가 발생할 수 있다.
// 따라서 new Function은 바로 전역 렉시컬 환경을 참조하게 된다.
