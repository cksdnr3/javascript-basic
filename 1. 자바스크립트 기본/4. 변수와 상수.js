//                                                      변수와 상수
// 대다수의 자바스크립트 애플리케이션은 사용자나 서버로부터 입력받은 정보를 처리하는 방식으로 동작한다.
// 1. 온라인 쇼핑몰 - 판매 중인 상품이나 장바구니 등의 정보 - 판매 중인 상품을 서버로 받아오고 사용자가 선택한 상품을 장바구니에 넣음
// 2. 채팅 어플리케이션 - 사용자 정보, 메시지등의 정보 - 사용자 정보를 서버로 받아오고 사용자가 입력한 메시지가 입력됨
// 변수는 이러한 정보를 저장하는 용도로 사용된다.

//                                                      변수(variable)
//  변수는 데이터를 저장할 때 쓰는 이름이 붙은 저장소다.
// 자바 스크립트에선 let키워드를 사용해 변수를 생성한다.
let message; // message라는 이름이 붙은 변수 생성
// 할당 연산자 = 을통해 변수 안에 데이터를 저장할 수 있다.
let message = "Hello"; // message라는 이름이 붙은 변수를 생성하고 값으로 문자열 "Hello"를 할당함
// 문자열이 변수와 연결된 메모리 영역에 저장되었기 때문에, 변수명을 이용해 문자열에 접근할 수 있게 되었다.

let message;
message = "Hello";
message = "World"; // 값 변경도 가능

let hello = "Hello world";
let message;
message = hello; // hello의 값 Hello world를 변수 message에 복사해 할당할 수도 있음 같은 값을 가지게 된다.

// (!) 변수를 두 번 선언하면 에러가 발생한다.
let message = "This";
let message = "That"; // SyntaxError: 'message' has aleady been declared

//------------------------------------------------------------------------------------------------------------------------------------------------
//                                                                  변수 명명 규칙
// 1. 변수명에는 오직 문자와 숫자, 그리고 기호 $와 _만 들어갈 수 있다.
// 2. 첫 글자는 숫자가 될 수 없다.
// 여러 단어를 조합해 변수명을 만들 땐 카멜 표기법이 흔히 사용된다.
// 첫 단어를 제외한 각 단어의 첫 글자를 대문자로 작성한다.

// (!) 예약어
// 예약어(reserved name)은 변수명으로 사용할 수 없다.
let let = 5; // 에러

//------------------------------------------------------------------------------------------------------------------------------------------------
//                                                      상수
// 변화하지 않는 변수를 선언할 땐, let대신 const를 사용한다.
const myBirthday = "18.04.1982"; // 재할당 불가능
myBirhday = "01,01,2001"; // 재할당시 에러남
// 값이 변경되는 것을 방지하고 이 값은 변하지 않는다는 것을 명시함

//------------------------------------------------------------------------------------------------------------------------------------------------
//                                                            바람직한 변수명
// 규칙
// userName 이나 shoppingCart처럼 사람이 읽을 수 있는 이름
// 무엇을 의미하는지 명확히 모를시에도 a,b,c같은 짧은 이름은 피해라
// 최대한 서술적이며 간결하게 data혹은 value같은 이름은 포괄적이기 때문에 사용x
