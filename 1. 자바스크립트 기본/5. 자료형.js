//                                                          자료형
// 자바스크립트에는 여덟 가지 기본 자료형이 있다.
// 자바스크립트의 변수는 자료형에 관계없이 모든 데이터가 들어갈 수 있다. 자료의 타입은 있지만 변수에 저장되는 값의 타입은 언제든지 바꿀 수 있다.
// 이를 동적 타입 언어(dynamically typed)라고 부른다.

//------------------------------------------------------------------------------------------------------------------------------------------------
//                                                          숫자형
// 정수 및 부동소수점 숫자(floating point number)를 나타낸다.
// 숫자형은 관련된 연산이 가능
// 일반적 숫자 외에 Infinity, -Infinity, NaN같은 특수 숫자 값도 포함된다.
// Infinity는 어떤 숫자보다 큰 특수값 무한대를 나타낸다. * 어느 숫자든 0으로 나누면 무한대를 얻을 수 있음
// NaN은 계산 중에 에러가 발생했다는 것을 나타내주는 값이다. 부정확하거나 정의되지 않은 수학 연산을 사용하면 계산 중에 에러가 발생하는데 이때 NaN을 반환한다.
alert( "숫자가 아님" / 2 ); // NaN, 문자열을 숫자로 나누면 오류 발생

// (i) 수학 연산은 안전하다
// 자바스크립트에서 행해지는 수학 연산은 안전하다고 볼 수 있다. 0으로 나눈다거나 문자열을 숫자로 취급하는 등의 이례적인 연산이 자바스크립트에선 가능하다.
// 말도 안되는 수학연산을 해도 에러를 뿜지 않고 NaN을 반환하기 때문

//------------------------------------------------------------------------------------------------------------------------------------------------
//                                                         Bigint
// Bigint는 매우큰 숫자가 필요한 경우에 쓰이는 자료형
// 정수 리터럴 끝에 n을 붙이면 만들 수 있음
const bigInt = 1234567890123456789012345678901234567890n;

//-----------------------------------------------------------------------------------------------------------------------------------------------
//                                                          문자형
// 자바스크립트에선 문자열을 따옴표로 묵는다.
// 큰따옴표, 작은따옴표, 여따옴표(백틱)
// 큰따옴표와 작은따옴표는 동일 백틱은 변수나 표현식을 ${...}안에 적으면 원하는 변수나 표현식을 문자열 중간에 쉽게 삽입가능

// (i) 글자형은 없다.
// java의 경우 char같은 글자형을 지원하지만 자바스크립트는 모두 통합해 문자열(string)이다.

//-----------------------------------------------------------------------------------------------------------------------------------------------
//                                                           불린형
// 불린형(논리 타입)은 true와 false 두 가지 값박에 없는 자료형이다.
// 비교 결과를 저장할 떄도 사용된다.
let isGreater = 4 > 1;
alert( isGreater ); // true

//-----------------------------------------------------------------------------------------------------------------------------------------------
//                                                          null 값
// null값은 지금까지 소개한 잘형 중 어느 자료형에도 속하지 않는 값이다.
// 다른 언어에선 존재하지 않는 객체에 대한 참조나 널 포인터를 나타낼 떄 사용하지만 자바스크립트에선 존재하지 않는 값 비어있는 값 알수없는 값을 나타냄

//-----------------------------------------------------------------------------------------------------------------------------------------------
//                                                      undefined 값
// 값이 할당되지 않은 상태
// undefined는 예약어이기 때문에 직접할당하지말고 변수가 비어있으면 null을 사용하자.

//-----------------------------------------------------------------------------------------------------------------------------------------------
//                                                          객체와 심볼
// 객체형을 제외한 다른 자료형은 한 가지 자료형만 표현할 수 있기 때문에 원시(primitive)자료형이라 부른다.
// 반면 객체는 데이터 컬렉션이나 복잡한 개체(entity)를 표현할 수 있다.
// 심볼형은 객체의 고유한 식별자를 만들 때 사용도니다.

//-----------------------------------------------------------------------------------------------------------------------------------------------
//                                                      typeof 연산자
// typeof 연산자는 인수의 자료형을 반환한다.
typeof undefined // undefined
typeof 0 // number
typeof 10n // bigint
typeof true // boolean
typeof "foo" // string
typeof Symbol("id") // symbol
typeof Math // object
typeof null // object
typeof alert // function
// Math는 수학 연산을 제공하는 내장 객체이므로 object 출력
// null은 객체가 아니지만 하위호환성을 위해 object로 출력
// alert는 함수라 function이 출력되지만 함수는 실제로 객체형에 속하고 함수형이라는 자료형은 없다.